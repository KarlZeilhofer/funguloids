# Makefile.in generated by automake 1.9.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bininstall_PROGRAMS = funguloids$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bininstalldir)"
bininstallPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bininstall_PROGRAMS)
am_funguloids_OBJECTS = funguloids-asteroid.$(OBJEXT) \
	funguloids-ballworm.$(OBJEXT) funguloids-base.$(OBJEXT) \
	funguloids-bground.$(OBJEXT) funguloids-blackhole.$(OBJEXT) \
	funguloids-effects.$(OBJEXT) \
	funguloids-fmodexsoundsystem.$(OBJEXT) \
	funguloids-gamecamera.$(OBJEXT) funguloids-game.$(OBJEXT) \
	funguloids-hiscore.$(OBJEXT) funguloids-input.$(OBJEXT) \
	funguloids-main.$(OBJEXT) funguloids-menu.$(OBJEXT) \
	funguloids-movingobject.$(OBJEXT) \
	funguloids-mp3stream.$(OBJEXT) funguloids-mpak.$(OBJEXT) \
	funguloids-mpakogre.$(OBJEXT) funguloids-mushroom.$(OBJEXT) \
	funguloids-object.$(OBJEXT) funguloids-objectsystem.$(OBJEXT) \
	funguloids-oggstream.$(OBJEXT) funguloids-ogreapp.$(OBJEXT) \
	funguloids-ogrelistener.$(OBJEXT) \
	funguloids-openalchannel.$(OBJEXT) \
	funguloids-openalchannelgroup.$(OBJEXT) \
	funguloids-openalsoundsystem.$(OBJEXT) \
	funguloids-player.$(OBJEXT) funguloids-playlist.$(OBJEXT) \
	funguloids-scriptsystem.$(OBJEXT) \
	funguloids-streamplayer.$(OBJEXT) \
	funguloids-tentacles.$(OBJEXT) funguloids-whirler.$(OBJEXT)
funguloids_OBJECTS = $(am_funguloids_OBJECTS)
funguloids_DEPENDENCIES =
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)/include
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
SOURCES = $(funguloids_SOURCES)
DIST_SOURCES = $(funguloids_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GREP = @GREP@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
LUA_CFLAGS = @LUA_CFLAGS@
LUA_LIBS = @LUA_LIBS@
MAKEINFO = @MAKEINFO@
OBJEXT = @OBJEXT@
OGRE_CFLAGS = @OGRE_CFLAGS@
OGRE_LIBS = @OGRE_LIBS@
OIS_CFLAGS = @OIS_CFLAGS@
OIS_LIBS = @OIS_LIBS@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
bininstalldir = @bininstalldir@
build_alias = @build_alias@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
docimageinstalldir = @docimageinstalldir@
docinstalldir = @docinstalldir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
gameinstalldir = @gameinstalldir@
highscoredir = @highscoredir@
highscoregroup = @highscoregroup@
host_alias = @host_alias@
htmldir = @htmldir@
iconinstalldir = @iconinstalldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
musicinstalldir = @musicinstalldir@
ogreplugindir = @ogreplugindir@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
pixmapinstalldir = @pixmapinstalldir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
funguloids_CPPFLAGS = -I$(top_srcdir)/include -I$(top_srcdir)/include/SimpleIni
funguloids_LDADD = @OIS_LIBS@ @OGRE_LIBS@ @LUA_LIBS@
funguloids_CXXFLAGS = @OIS_CFLAGS@ @OGRE_CFLAGS@ @LUA_CFLAGS@
funguloids_SOURCES = asteroid.cpp \
	ballworm.cpp \
	base.cpp \
	bground.cpp \
	blackhole.cpp \
	effects.cpp \
	fmodexsoundsystem.cpp \
	gamecamera.cpp \
	game.cpp \
	hiscore.cpp \
	input.cpp \
	main.cpp \
	menu.cpp \
	movingobject.cpp \
	mp3stream.cpp \
	mpak.cpp \
	mpakogre.cpp \
	mushroom.cpp \
	object.cpp \
	objectsystem.cpp \
	oggstream.cpp \
	ogreapp.cpp \
	ogrelistener.cpp \
	openalchannel.cpp \
	openalchannelgroup.cpp \
	openalsoundsystem.cpp \
	player.cpp \
	playlist.cpp \
	scriptsystem.cpp \
	streamplayer.cpp \
	tentacles.cpp \
	whirler.cpp

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-bininstallPROGRAMS: $(bininstall_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bininstalldir)" || $(mkdir_p) "$(DESTDIR)$(bininstalldir)"
	@list='$(bininstall_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(bininstallPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bininstalldir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(bininstallPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bininstalldir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-bininstallPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bininstall_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bininstalldir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bininstalldir)/$$f"; \
	done

clean-bininstallPROGRAMS:
	-test -z "$(bininstall_PROGRAMS)" || rm -f $(bininstall_PROGRAMS)
funguloids$(EXEEXT): $(funguloids_OBJECTS) $(funguloids_DEPENDENCIES) 
	@rm -f funguloids$(EXEEXT)
	$(CXXLINK) $(funguloids_LDFLAGS) $(funguloids_OBJECTS) $(funguloids_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/funguloids-asteroid.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/funguloids-ballworm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/funguloids-base.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/funguloids-bground.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/funguloids-blackhole.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/funguloids-effects.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/funguloids-fmodexsoundsystem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/funguloids-game.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/funguloids-gamecamera.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/funguloids-hiscore.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/funguloids-input.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/funguloids-main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/funguloids-menu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/funguloids-movingobject.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/funguloids-mp3stream.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/funguloids-mpak.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/funguloids-mpakogre.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/funguloids-mushroom.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/funguloids-object.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/funguloids-objectsystem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/funguloids-oggstream.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/funguloids-ogreapp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/funguloids-ogrelistener.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/funguloids-openalchannel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/funguloids-openalchannelgroup.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/funguloids-openalsoundsystem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/funguloids-player.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/funguloids-playlist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/funguloids-scriptsystem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/funguloids-streamplayer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/funguloids-tentacles.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/funguloids-whirler.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

funguloids-asteroid.o: asteroid.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-asteroid.o -MD -MP -MF "$(DEPDIR)/funguloids-asteroid.Tpo" -c -o funguloids-asteroid.o `test -f 'asteroid.cpp' || echo '$(srcdir)/'`asteroid.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-asteroid.Tpo" "$(DEPDIR)/funguloids-asteroid.Po"; else rm -f "$(DEPDIR)/funguloids-asteroid.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='asteroid.cpp' object='funguloids-asteroid.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-asteroid.o `test -f 'asteroid.cpp' || echo '$(srcdir)/'`asteroid.cpp

funguloids-asteroid.obj: asteroid.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-asteroid.obj -MD -MP -MF "$(DEPDIR)/funguloids-asteroid.Tpo" -c -o funguloids-asteroid.obj `if test -f 'asteroid.cpp'; then $(CYGPATH_W) 'asteroid.cpp'; else $(CYGPATH_W) '$(srcdir)/asteroid.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-asteroid.Tpo" "$(DEPDIR)/funguloids-asteroid.Po"; else rm -f "$(DEPDIR)/funguloids-asteroid.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='asteroid.cpp' object='funguloids-asteroid.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-asteroid.obj `if test -f 'asteroid.cpp'; then $(CYGPATH_W) 'asteroid.cpp'; else $(CYGPATH_W) '$(srcdir)/asteroid.cpp'; fi`

funguloids-ballworm.o: ballworm.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-ballworm.o -MD -MP -MF "$(DEPDIR)/funguloids-ballworm.Tpo" -c -o funguloids-ballworm.o `test -f 'ballworm.cpp' || echo '$(srcdir)/'`ballworm.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-ballworm.Tpo" "$(DEPDIR)/funguloids-ballworm.Po"; else rm -f "$(DEPDIR)/funguloids-ballworm.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ballworm.cpp' object='funguloids-ballworm.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-ballworm.o `test -f 'ballworm.cpp' || echo '$(srcdir)/'`ballworm.cpp

funguloids-ballworm.obj: ballworm.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-ballworm.obj -MD -MP -MF "$(DEPDIR)/funguloids-ballworm.Tpo" -c -o funguloids-ballworm.obj `if test -f 'ballworm.cpp'; then $(CYGPATH_W) 'ballworm.cpp'; else $(CYGPATH_W) '$(srcdir)/ballworm.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-ballworm.Tpo" "$(DEPDIR)/funguloids-ballworm.Po"; else rm -f "$(DEPDIR)/funguloids-ballworm.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ballworm.cpp' object='funguloids-ballworm.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-ballworm.obj `if test -f 'ballworm.cpp'; then $(CYGPATH_W) 'ballworm.cpp'; else $(CYGPATH_W) '$(srcdir)/ballworm.cpp'; fi`

funguloids-base.o: base.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-base.o -MD -MP -MF "$(DEPDIR)/funguloids-base.Tpo" -c -o funguloids-base.o `test -f 'base.cpp' || echo '$(srcdir)/'`base.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-base.Tpo" "$(DEPDIR)/funguloids-base.Po"; else rm -f "$(DEPDIR)/funguloids-base.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base.cpp' object='funguloids-base.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-base.o `test -f 'base.cpp' || echo '$(srcdir)/'`base.cpp

funguloids-base.obj: base.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-base.obj -MD -MP -MF "$(DEPDIR)/funguloids-base.Tpo" -c -o funguloids-base.obj `if test -f 'base.cpp'; then $(CYGPATH_W) 'base.cpp'; else $(CYGPATH_W) '$(srcdir)/base.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-base.Tpo" "$(DEPDIR)/funguloids-base.Po"; else rm -f "$(DEPDIR)/funguloids-base.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='base.cpp' object='funguloids-base.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-base.obj `if test -f 'base.cpp'; then $(CYGPATH_W) 'base.cpp'; else $(CYGPATH_W) '$(srcdir)/base.cpp'; fi`

funguloids-bground.o: bground.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-bground.o -MD -MP -MF "$(DEPDIR)/funguloids-bground.Tpo" -c -o funguloids-bground.o `test -f 'bground.cpp' || echo '$(srcdir)/'`bground.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-bground.Tpo" "$(DEPDIR)/funguloids-bground.Po"; else rm -f "$(DEPDIR)/funguloids-bground.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='bground.cpp' object='funguloids-bground.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-bground.o `test -f 'bground.cpp' || echo '$(srcdir)/'`bground.cpp

funguloids-bground.obj: bground.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-bground.obj -MD -MP -MF "$(DEPDIR)/funguloids-bground.Tpo" -c -o funguloids-bground.obj `if test -f 'bground.cpp'; then $(CYGPATH_W) 'bground.cpp'; else $(CYGPATH_W) '$(srcdir)/bground.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-bground.Tpo" "$(DEPDIR)/funguloids-bground.Po"; else rm -f "$(DEPDIR)/funguloids-bground.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='bground.cpp' object='funguloids-bground.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-bground.obj `if test -f 'bground.cpp'; then $(CYGPATH_W) 'bground.cpp'; else $(CYGPATH_W) '$(srcdir)/bground.cpp'; fi`

funguloids-blackhole.o: blackhole.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-blackhole.o -MD -MP -MF "$(DEPDIR)/funguloids-blackhole.Tpo" -c -o funguloids-blackhole.o `test -f 'blackhole.cpp' || echo '$(srcdir)/'`blackhole.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-blackhole.Tpo" "$(DEPDIR)/funguloids-blackhole.Po"; else rm -f "$(DEPDIR)/funguloids-blackhole.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='blackhole.cpp' object='funguloids-blackhole.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-blackhole.o `test -f 'blackhole.cpp' || echo '$(srcdir)/'`blackhole.cpp

funguloids-blackhole.obj: blackhole.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-blackhole.obj -MD -MP -MF "$(DEPDIR)/funguloids-blackhole.Tpo" -c -o funguloids-blackhole.obj `if test -f 'blackhole.cpp'; then $(CYGPATH_W) 'blackhole.cpp'; else $(CYGPATH_W) '$(srcdir)/blackhole.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-blackhole.Tpo" "$(DEPDIR)/funguloids-blackhole.Po"; else rm -f "$(DEPDIR)/funguloids-blackhole.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='blackhole.cpp' object='funguloids-blackhole.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-blackhole.obj `if test -f 'blackhole.cpp'; then $(CYGPATH_W) 'blackhole.cpp'; else $(CYGPATH_W) '$(srcdir)/blackhole.cpp'; fi`

funguloids-effects.o: effects.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-effects.o -MD -MP -MF "$(DEPDIR)/funguloids-effects.Tpo" -c -o funguloids-effects.o `test -f 'effects.cpp' || echo '$(srcdir)/'`effects.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-effects.Tpo" "$(DEPDIR)/funguloids-effects.Po"; else rm -f "$(DEPDIR)/funguloids-effects.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='effects.cpp' object='funguloids-effects.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-effects.o `test -f 'effects.cpp' || echo '$(srcdir)/'`effects.cpp

funguloids-effects.obj: effects.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-effects.obj -MD -MP -MF "$(DEPDIR)/funguloids-effects.Tpo" -c -o funguloids-effects.obj `if test -f 'effects.cpp'; then $(CYGPATH_W) 'effects.cpp'; else $(CYGPATH_W) '$(srcdir)/effects.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-effects.Tpo" "$(DEPDIR)/funguloids-effects.Po"; else rm -f "$(DEPDIR)/funguloids-effects.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='effects.cpp' object='funguloids-effects.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-effects.obj `if test -f 'effects.cpp'; then $(CYGPATH_W) 'effects.cpp'; else $(CYGPATH_W) '$(srcdir)/effects.cpp'; fi`

funguloids-fmodexsoundsystem.o: fmodexsoundsystem.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-fmodexsoundsystem.o -MD -MP -MF "$(DEPDIR)/funguloids-fmodexsoundsystem.Tpo" -c -o funguloids-fmodexsoundsystem.o `test -f 'fmodexsoundsystem.cpp' || echo '$(srcdir)/'`fmodexsoundsystem.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-fmodexsoundsystem.Tpo" "$(DEPDIR)/funguloids-fmodexsoundsystem.Po"; else rm -f "$(DEPDIR)/funguloids-fmodexsoundsystem.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fmodexsoundsystem.cpp' object='funguloids-fmodexsoundsystem.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-fmodexsoundsystem.o `test -f 'fmodexsoundsystem.cpp' || echo '$(srcdir)/'`fmodexsoundsystem.cpp

funguloids-fmodexsoundsystem.obj: fmodexsoundsystem.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-fmodexsoundsystem.obj -MD -MP -MF "$(DEPDIR)/funguloids-fmodexsoundsystem.Tpo" -c -o funguloids-fmodexsoundsystem.obj `if test -f 'fmodexsoundsystem.cpp'; then $(CYGPATH_W) 'fmodexsoundsystem.cpp'; else $(CYGPATH_W) '$(srcdir)/fmodexsoundsystem.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-fmodexsoundsystem.Tpo" "$(DEPDIR)/funguloids-fmodexsoundsystem.Po"; else rm -f "$(DEPDIR)/funguloids-fmodexsoundsystem.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fmodexsoundsystem.cpp' object='funguloids-fmodexsoundsystem.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-fmodexsoundsystem.obj `if test -f 'fmodexsoundsystem.cpp'; then $(CYGPATH_W) 'fmodexsoundsystem.cpp'; else $(CYGPATH_W) '$(srcdir)/fmodexsoundsystem.cpp'; fi`

funguloids-gamecamera.o: gamecamera.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-gamecamera.o -MD -MP -MF "$(DEPDIR)/funguloids-gamecamera.Tpo" -c -o funguloids-gamecamera.o `test -f 'gamecamera.cpp' || echo '$(srcdir)/'`gamecamera.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-gamecamera.Tpo" "$(DEPDIR)/funguloids-gamecamera.Po"; else rm -f "$(DEPDIR)/funguloids-gamecamera.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gamecamera.cpp' object='funguloids-gamecamera.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-gamecamera.o `test -f 'gamecamera.cpp' || echo '$(srcdir)/'`gamecamera.cpp

funguloids-gamecamera.obj: gamecamera.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-gamecamera.obj -MD -MP -MF "$(DEPDIR)/funguloids-gamecamera.Tpo" -c -o funguloids-gamecamera.obj `if test -f 'gamecamera.cpp'; then $(CYGPATH_W) 'gamecamera.cpp'; else $(CYGPATH_W) '$(srcdir)/gamecamera.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-gamecamera.Tpo" "$(DEPDIR)/funguloids-gamecamera.Po"; else rm -f "$(DEPDIR)/funguloids-gamecamera.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gamecamera.cpp' object='funguloids-gamecamera.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-gamecamera.obj `if test -f 'gamecamera.cpp'; then $(CYGPATH_W) 'gamecamera.cpp'; else $(CYGPATH_W) '$(srcdir)/gamecamera.cpp'; fi`

funguloids-game.o: game.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-game.o -MD -MP -MF "$(DEPDIR)/funguloids-game.Tpo" -c -o funguloids-game.o `test -f 'game.cpp' || echo '$(srcdir)/'`game.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-game.Tpo" "$(DEPDIR)/funguloids-game.Po"; else rm -f "$(DEPDIR)/funguloids-game.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='game.cpp' object='funguloids-game.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-game.o `test -f 'game.cpp' || echo '$(srcdir)/'`game.cpp

funguloids-game.obj: game.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-game.obj -MD -MP -MF "$(DEPDIR)/funguloids-game.Tpo" -c -o funguloids-game.obj `if test -f 'game.cpp'; then $(CYGPATH_W) 'game.cpp'; else $(CYGPATH_W) '$(srcdir)/game.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-game.Tpo" "$(DEPDIR)/funguloids-game.Po"; else rm -f "$(DEPDIR)/funguloids-game.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='game.cpp' object='funguloids-game.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-game.obj `if test -f 'game.cpp'; then $(CYGPATH_W) 'game.cpp'; else $(CYGPATH_W) '$(srcdir)/game.cpp'; fi`

funguloids-hiscore.o: hiscore.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-hiscore.o -MD -MP -MF "$(DEPDIR)/funguloids-hiscore.Tpo" -c -o funguloids-hiscore.o `test -f 'hiscore.cpp' || echo '$(srcdir)/'`hiscore.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-hiscore.Tpo" "$(DEPDIR)/funguloids-hiscore.Po"; else rm -f "$(DEPDIR)/funguloids-hiscore.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hiscore.cpp' object='funguloids-hiscore.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-hiscore.o `test -f 'hiscore.cpp' || echo '$(srcdir)/'`hiscore.cpp

funguloids-hiscore.obj: hiscore.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-hiscore.obj -MD -MP -MF "$(DEPDIR)/funguloids-hiscore.Tpo" -c -o funguloids-hiscore.obj `if test -f 'hiscore.cpp'; then $(CYGPATH_W) 'hiscore.cpp'; else $(CYGPATH_W) '$(srcdir)/hiscore.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-hiscore.Tpo" "$(DEPDIR)/funguloids-hiscore.Po"; else rm -f "$(DEPDIR)/funguloids-hiscore.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='hiscore.cpp' object='funguloids-hiscore.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-hiscore.obj `if test -f 'hiscore.cpp'; then $(CYGPATH_W) 'hiscore.cpp'; else $(CYGPATH_W) '$(srcdir)/hiscore.cpp'; fi`

funguloids-input.o: input.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-input.o -MD -MP -MF "$(DEPDIR)/funguloids-input.Tpo" -c -o funguloids-input.o `test -f 'input.cpp' || echo '$(srcdir)/'`input.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-input.Tpo" "$(DEPDIR)/funguloids-input.Po"; else rm -f "$(DEPDIR)/funguloids-input.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='input.cpp' object='funguloids-input.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-input.o `test -f 'input.cpp' || echo '$(srcdir)/'`input.cpp

funguloids-input.obj: input.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-input.obj -MD -MP -MF "$(DEPDIR)/funguloids-input.Tpo" -c -o funguloids-input.obj `if test -f 'input.cpp'; then $(CYGPATH_W) 'input.cpp'; else $(CYGPATH_W) '$(srcdir)/input.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-input.Tpo" "$(DEPDIR)/funguloids-input.Po"; else rm -f "$(DEPDIR)/funguloids-input.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='input.cpp' object='funguloids-input.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-input.obj `if test -f 'input.cpp'; then $(CYGPATH_W) 'input.cpp'; else $(CYGPATH_W) '$(srcdir)/input.cpp'; fi`

funguloids-main.o: main.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-main.o -MD -MP -MF "$(DEPDIR)/funguloids-main.Tpo" -c -o funguloids-main.o `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-main.Tpo" "$(DEPDIR)/funguloids-main.Po"; else rm -f "$(DEPDIR)/funguloids-main.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='main.cpp' object='funguloids-main.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-main.o `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp

funguloids-main.obj: main.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-main.obj -MD -MP -MF "$(DEPDIR)/funguloids-main.Tpo" -c -o funguloids-main.obj `if test -f 'main.cpp'; then $(CYGPATH_W) 'main.cpp'; else $(CYGPATH_W) '$(srcdir)/main.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-main.Tpo" "$(DEPDIR)/funguloids-main.Po"; else rm -f "$(DEPDIR)/funguloids-main.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='main.cpp' object='funguloids-main.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-main.obj `if test -f 'main.cpp'; then $(CYGPATH_W) 'main.cpp'; else $(CYGPATH_W) '$(srcdir)/main.cpp'; fi`

funguloids-menu.o: menu.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-menu.o -MD -MP -MF "$(DEPDIR)/funguloids-menu.Tpo" -c -o funguloids-menu.o `test -f 'menu.cpp' || echo '$(srcdir)/'`menu.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-menu.Tpo" "$(DEPDIR)/funguloids-menu.Po"; else rm -f "$(DEPDIR)/funguloids-menu.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menu.cpp' object='funguloids-menu.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-menu.o `test -f 'menu.cpp' || echo '$(srcdir)/'`menu.cpp

funguloids-menu.obj: menu.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-menu.obj -MD -MP -MF "$(DEPDIR)/funguloids-menu.Tpo" -c -o funguloids-menu.obj `if test -f 'menu.cpp'; then $(CYGPATH_W) 'menu.cpp'; else $(CYGPATH_W) '$(srcdir)/menu.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-menu.Tpo" "$(DEPDIR)/funguloids-menu.Po"; else rm -f "$(DEPDIR)/funguloids-menu.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='menu.cpp' object='funguloids-menu.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-menu.obj `if test -f 'menu.cpp'; then $(CYGPATH_W) 'menu.cpp'; else $(CYGPATH_W) '$(srcdir)/menu.cpp'; fi`

funguloids-movingobject.o: movingobject.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-movingobject.o -MD -MP -MF "$(DEPDIR)/funguloids-movingobject.Tpo" -c -o funguloids-movingobject.o `test -f 'movingobject.cpp' || echo '$(srcdir)/'`movingobject.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-movingobject.Tpo" "$(DEPDIR)/funguloids-movingobject.Po"; else rm -f "$(DEPDIR)/funguloids-movingobject.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='movingobject.cpp' object='funguloids-movingobject.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-movingobject.o `test -f 'movingobject.cpp' || echo '$(srcdir)/'`movingobject.cpp

funguloids-movingobject.obj: movingobject.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-movingobject.obj -MD -MP -MF "$(DEPDIR)/funguloids-movingobject.Tpo" -c -o funguloids-movingobject.obj `if test -f 'movingobject.cpp'; then $(CYGPATH_W) 'movingobject.cpp'; else $(CYGPATH_W) '$(srcdir)/movingobject.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-movingobject.Tpo" "$(DEPDIR)/funguloids-movingobject.Po"; else rm -f "$(DEPDIR)/funguloids-movingobject.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='movingobject.cpp' object='funguloids-movingobject.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-movingobject.obj `if test -f 'movingobject.cpp'; then $(CYGPATH_W) 'movingobject.cpp'; else $(CYGPATH_W) '$(srcdir)/movingobject.cpp'; fi`

funguloids-mp3stream.o: mp3stream.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-mp3stream.o -MD -MP -MF "$(DEPDIR)/funguloids-mp3stream.Tpo" -c -o funguloids-mp3stream.o `test -f 'mp3stream.cpp' || echo '$(srcdir)/'`mp3stream.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-mp3stream.Tpo" "$(DEPDIR)/funguloids-mp3stream.Po"; else rm -f "$(DEPDIR)/funguloids-mp3stream.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mp3stream.cpp' object='funguloids-mp3stream.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-mp3stream.o `test -f 'mp3stream.cpp' || echo '$(srcdir)/'`mp3stream.cpp

funguloids-mp3stream.obj: mp3stream.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-mp3stream.obj -MD -MP -MF "$(DEPDIR)/funguloids-mp3stream.Tpo" -c -o funguloids-mp3stream.obj `if test -f 'mp3stream.cpp'; then $(CYGPATH_W) 'mp3stream.cpp'; else $(CYGPATH_W) '$(srcdir)/mp3stream.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-mp3stream.Tpo" "$(DEPDIR)/funguloids-mp3stream.Po"; else rm -f "$(DEPDIR)/funguloids-mp3stream.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mp3stream.cpp' object='funguloids-mp3stream.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-mp3stream.obj `if test -f 'mp3stream.cpp'; then $(CYGPATH_W) 'mp3stream.cpp'; else $(CYGPATH_W) '$(srcdir)/mp3stream.cpp'; fi`

funguloids-mpak.o: mpak.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-mpak.o -MD -MP -MF "$(DEPDIR)/funguloids-mpak.Tpo" -c -o funguloids-mpak.o `test -f 'mpak.cpp' || echo '$(srcdir)/'`mpak.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-mpak.Tpo" "$(DEPDIR)/funguloids-mpak.Po"; else rm -f "$(DEPDIR)/funguloids-mpak.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mpak.cpp' object='funguloids-mpak.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-mpak.o `test -f 'mpak.cpp' || echo '$(srcdir)/'`mpak.cpp

funguloids-mpak.obj: mpak.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-mpak.obj -MD -MP -MF "$(DEPDIR)/funguloids-mpak.Tpo" -c -o funguloids-mpak.obj `if test -f 'mpak.cpp'; then $(CYGPATH_W) 'mpak.cpp'; else $(CYGPATH_W) '$(srcdir)/mpak.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-mpak.Tpo" "$(DEPDIR)/funguloids-mpak.Po"; else rm -f "$(DEPDIR)/funguloids-mpak.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mpak.cpp' object='funguloids-mpak.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-mpak.obj `if test -f 'mpak.cpp'; then $(CYGPATH_W) 'mpak.cpp'; else $(CYGPATH_W) '$(srcdir)/mpak.cpp'; fi`

funguloids-mpakogre.o: mpakogre.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-mpakogre.o -MD -MP -MF "$(DEPDIR)/funguloids-mpakogre.Tpo" -c -o funguloids-mpakogre.o `test -f 'mpakogre.cpp' || echo '$(srcdir)/'`mpakogre.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-mpakogre.Tpo" "$(DEPDIR)/funguloids-mpakogre.Po"; else rm -f "$(DEPDIR)/funguloids-mpakogre.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mpakogre.cpp' object='funguloids-mpakogre.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-mpakogre.o `test -f 'mpakogre.cpp' || echo '$(srcdir)/'`mpakogre.cpp

funguloids-mpakogre.obj: mpakogre.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-mpakogre.obj -MD -MP -MF "$(DEPDIR)/funguloids-mpakogre.Tpo" -c -o funguloids-mpakogre.obj `if test -f 'mpakogre.cpp'; then $(CYGPATH_W) 'mpakogre.cpp'; else $(CYGPATH_W) '$(srcdir)/mpakogre.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-mpakogre.Tpo" "$(DEPDIR)/funguloids-mpakogre.Po"; else rm -f "$(DEPDIR)/funguloids-mpakogre.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mpakogre.cpp' object='funguloids-mpakogre.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-mpakogre.obj `if test -f 'mpakogre.cpp'; then $(CYGPATH_W) 'mpakogre.cpp'; else $(CYGPATH_W) '$(srcdir)/mpakogre.cpp'; fi`

funguloids-mushroom.o: mushroom.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-mushroom.o -MD -MP -MF "$(DEPDIR)/funguloids-mushroom.Tpo" -c -o funguloids-mushroom.o `test -f 'mushroom.cpp' || echo '$(srcdir)/'`mushroom.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-mushroom.Tpo" "$(DEPDIR)/funguloids-mushroom.Po"; else rm -f "$(DEPDIR)/funguloids-mushroom.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mushroom.cpp' object='funguloids-mushroom.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-mushroom.o `test -f 'mushroom.cpp' || echo '$(srcdir)/'`mushroom.cpp

funguloids-mushroom.obj: mushroom.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-mushroom.obj -MD -MP -MF "$(DEPDIR)/funguloids-mushroom.Tpo" -c -o funguloids-mushroom.obj `if test -f 'mushroom.cpp'; then $(CYGPATH_W) 'mushroom.cpp'; else $(CYGPATH_W) '$(srcdir)/mushroom.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-mushroom.Tpo" "$(DEPDIR)/funguloids-mushroom.Po"; else rm -f "$(DEPDIR)/funguloids-mushroom.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mushroom.cpp' object='funguloids-mushroom.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-mushroom.obj `if test -f 'mushroom.cpp'; then $(CYGPATH_W) 'mushroom.cpp'; else $(CYGPATH_W) '$(srcdir)/mushroom.cpp'; fi`

funguloids-object.o: object.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-object.o -MD -MP -MF "$(DEPDIR)/funguloids-object.Tpo" -c -o funguloids-object.o `test -f 'object.cpp' || echo '$(srcdir)/'`object.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-object.Tpo" "$(DEPDIR)/funguloids-object.Po"; else rm -f "$(DEPDIR)/funguloids-object.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='object.cpp' object='funguloids-object.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-object.o `test -f 'object.cpp' || echo '$(srcdir)/'`object.cpp

funguloids-object.obj: object.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-object.obj -MD -MP -MF "$(DEPDIR)/funguloids-object.Tpo" -c -o funguloids-object.obj `if test -f 'object.cpp'; then $(CYGPATH_W) 'object.cpp'; else $(CYGPATH_W) '$(srcdir)/object.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-object.Tpo" "$(DEPDIR)/funguloids-object.Po"; else rm -f "$(DEPDIR)/funguloids-object.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='object.cpp' object='funguloids-object.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-object.obj `if test -f 'object.cpp'; then $(CYGPATH_W) 'object.cpp'; else $(CYGPATH_W) '$(srcdir)/object.cpp'; fi`

funguloids-objectsystem.o: objectsystem.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-objectsystem.o -MD -MP -MF "$(DEPDIR)/funguloids-objectsystem.Tpo" -c -o funguloids-objectsystem.o `test -f 'objectsystem.cpp' || echo '$(srcdir)/'`objectsystem.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-objectsystem.Tpo" "$(DEPDIR)/funguloids-objectsystem.Po"; else rm -f "$(DEPDIR)/funguloids-objectsystem.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='objectsystem.cpp' object='funguloids-objectsystem.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-objectsystem.o `test -f 'objectsystem.cpp' || echo '$(srcdir)/'`objectsystem.cpp

funguloids-objectsystem.obj: objectsystem.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-objectsystem.obj -MD -MP -MF "$(DEPDIR)/funguloids-objectsystem.Tpo" -c -o funguloids-objectsystem.obj `if test -f 'objectsystem.cpp'; then $(CYGPATH_W) 'objectsystem.cpp'; else $(CYGPATH_W) '$(srcdir)/objectsystem.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-objectsystem.Tpo" "$(DEPDIR)/funguloids-objectsystem.Po"; else rm -f "$(DEPDIR)/funguloids-objectsystem.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='objectsystem.cpp' object='funguloids-objectsystem.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-objectsystem.obj `if test -f 'objectsystem.cpp'; then $(CYGPATH_W) 'objectsystem.cpp'; else $(CYGPATH_W) '$(srcdir)/objectsystem.cpp'; fi`

funguloids-oggstream.o: oggstream.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-oggstream.o -MD -MP -MF "$(DEPDIR)/funguloids-oggstream.Tpo" -c -o funguloids-oggstream.o `test -f 'oggstream.cpp' || echo '$(srcdir)/'`oggstream.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-oggstream.Tpo" "$(DEPDIR)/funguloids-oggstream.Po"; else rm -f "$(DEPDIR)/funguloids-oggstream.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='oggstream.cpp' object='funguloids-oggstream.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-oggstream.o `test -f 'oggstream.cpp' || echo '$(srcdir)/'`oggstream.cpp

funguloids-oggstream.obj: oggstream.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-oggstream.obj -MD -MP -MF "$(DEPDIR)/funguloids-oggstream.Tpo" -c -o funguloids-oggstream.obj `if test -f 'oggstream.cpp'; then $(CYGPATH_W) 'oggstream.cpp'; else $(CYGPATH_W) '$(srcdir)/oggstream.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-oggstream.Tpo" "$(DEPDIR)/funguloids-oggstream.Po"; else rm -f "$(DEPDIR)/funguloids-oggstream.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='oggstream.cpp' object='funguloids-oggstream.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-oggstream.obj `if test -f 'oggstream.cpp'; then $(CYGPATH_W) 'oggstream.cpp'; else $(CYGPATH_W) '$(srcdir)/oggstream.cpp'; fi`

funguloids-ogreapp.o: ogreapp.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-ogreapp.o -MD -MP -MF "$(DEPDIR)/funguloids-ogreapp.Tpo" -c -o funguloids-ogreapp.o `test -f 'ogreapp.cpp' || echo '$(srcdir)/'`ogreapp.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-ogreapp.Tpo" "$(DEPDIR)/funguloids-ogreapp.Po"; else rm -f "$(DEPDIR)/funguloids-ogreapp.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ogreapp.cpp' object='funguloids-ogreapp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-ogreapp.o `test -f 'ogreapp.cpp' || echo '$(srcdir)/'`ogreapp.cpp

funguloids-ogreapp.obj: ogreapp.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-ogreapp.obj -MD -MP -MF "$(DEPDIR)/funguloids-ogreapp.Tpo" -c -o funguloids-ogreapp.obj `if test -f 'ogreapp.cpp'; then $(CYGPATH_W) 'ogreapp.cpp'; else $(CYGPATH_W) '$(srcdir)/ogreapp.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-ogreapp.Tpo" "$(DEPDIR)/funguloids-ogreapp.Po"; else rm -f "$(DEPDIR)/funguloids-ogreapp.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ogreapp.cpp' object='funguloids-ogreapp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-ogreapp.obj `if test -f 'ogreapp.cpp'; then $(CYGPATH_W) 'ogreapp.cpp'; else $(CYGPATH_W) '$(srcdir)/ogreapp.cpp'; fi`

funguloids-ogrelistener.o: ogrelistener.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-ogrelistener.o -MD -MP -MF "$(DEPDIR)/funguloids-ogrelistener.Tpo" -c -o funguloids-ogrelistener.o `test -f 'ogrelistener.cpp' || echo '$(srcdir)/'`ogrelistener.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-ogrelistener.Tpo" "$(DEPDIR)/funguloids-ogrelistener.Po"; else rm -f "$(DEPDIR)/funguloids-ogrelistener.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ogrelistener.cpp' object='funguloids-ogrelistener.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-ogrelistener.o `test -f 'ogrelistener.cpp' || echo '$(srcdir)/'`ogrelistener.cpp

funguloids-ogrelistener.obj: ogrelistener.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-ogrelistener.obj -MD -MP -MF "$(DEPDIR)/funguloids-ogrelistener.Tpo" -c -o funguloids-ogrelistener.obj `if test -f 'ogrelistener.cpp'; then $(CYGPATH_W) 'ogrelistener.cpp'; else $(CYGPATH_W) '$(srcdir)/ogrelistener.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-ogrelistener.Tpo" "$(DEPDIR)/funguloids-ogrelistener.Po"; else rm -f "$(DEPDIR)/funguloids-ogrelistener.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ogrelistener.cpp' object='funguloids-ogrelistener.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-ogrelistener.obj `if test -f 'ogrelistener.cpp'; then $(CYGPATH_W) 'ogrelistener.cpp'; else $(CYGPATH_W) '$(srcdir)/ogrelistener.cpp'; fi`

funguloids-openalchannel.o: openalchannel.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-openalchannel.o -MD -MP -MF "$(DEPDIR)/funguloids-openalchannel.Tpo" -c -o funguloids-openalchannel.o `test -f 'openalchannel.cpp' || echo '$(srcdir)/'`openalchannel.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-openalchannel.Tpo" "$(DEPDIR)/funguloids-openalchannel.Po"; else rm -f "$(DEPDIR)/funguloids-openalchannel.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='openalchannel.cpp' object='funguloids-openalchannel.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-openalchannel.o `test -f 'openalchannel.cpp' || echo '$(srcdir)/'`openalchannel.cpp

funguloids-openalchannel.obj: openalchannel.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-openalchannel.obj -MD -MP -MF "$(DEPDIR)/funguloids-openalchannel.Tpo" -c -o funguloids-openalchannel.obj `if test -f 'openalchannel.cpp'; then $(CYGPATH_W) 'openalchannel.cpp'; else $(CYGPATH_W) '$(srcdir)/openalchannel.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-openalchannel.Tpo" "$(DEPDIR)/funguloids-openalchannel.Po"; else rm -f "$(DEPDIR)/funguloids-openalchannel.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='openalchannel.cpp' object='funguloids-openalchannel.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-openalchannel.obj `if test -f 'openalchannel.cpp'; then $(CYGPATH_W) 'openalchannel.cpp'; else $(CYGPATH_W) '$(srcdir)/openalchannel.cpp'; fi`

funguloids-openalchannelgroup.o: openalchannelgroup.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-openalchannelgroup.o -MD -MP -MF "$(DEPDIR)/funguloids-openalchannelgroup.Tpo" -c -o funguloids-openalchannelgroup.o `test -f 'openalchannelgroup.cpp' || echo '$(srcdir)/'`openalchannelgroup.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-openalchannelgroup.Tpo" "$(DEPDIR)/funguloids-openalchannelgroup.Po"; else rm -f "$(DEPDIR)/funguloids-openalchannelgroup.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='openalchannelgroup.cpp' object='funguloids-openalchannelgroup.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-openalchannelgroup.o `test -f 'openalchannelgroup.cpp' || echo '$(srcdir)/'`openalchannelgroup.cpp

funguloids-openalchannelgroup.obj: openalchannelgroup.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-openalchannelgroup.obj -MD -MP -MF "$(DEPDIR)/funguloids-openalchannelgroup.Tpo" -c -o funguloids-openalchannelgroup.obj `if test -f 'openalchannelgroup.cpp'; then $(CYGPATH_W) 'openalchannelgroup.cpp'; else $(CYGPATH_W) '$(srcdir)/openalchannelgroup.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-openalchannelgroup.Tpo" "$(DEPDIR)/funguloids-openalchannelgroup.Po"; else rm -f "$(DEPDIR)/funguloids-openalchannelgroup.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='openalchannelgroup.cpp' object='funguloids-openalchannelgroup.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-openalchannelgroup.obj `if test -f 'openalchannelgroup.cpp'; then $(CYGPATH_W) 'openalchannelgroup.cpp'; else $(CYGPATH_W) '$(srcdir)/openalchannelgroup.cpp'; fi`

funguloids-openalsoundsystem.o: openalsoundsystem.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-openalsoundsystem.o -MD -MP -MF "$(DEPDIR)/funguloids-openalsoundsystem.Tpo" -c -o funguloids-openalsoundsystem.o `test -f 'openalsoundsystem.cpp' || echo '$(srcdir)/'`openalsoundsystem.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-openalsoundsystem.Tpo" "$(DEPDIR)/funguloids-openalsoundsystem.Po"; else rm -f "$(DEPDIR)/funguloids-openalsoundsystem.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='openalsoundsystem.cpp' object='funguloids-openalsoundsystem.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-openalsoundsystem.o `test -f 'openalsoundsystem.cpp' || echo '$(srcdir)/'`openalsoundsystem.cpp

funguloids-openalsoundsystem.obj: openalsoundsystem.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-openalsoundsystem.obj -MD -MP -MF "$(DEPDIR)/funguloids-openalsoundsystem.Tpo" -c -o funguloids-openalsoundsystem.obj `if test -f 'openalsoundsystem.cpp'; then $(CYGPATH_W) 'openalsoundsystem.cpp'; else $(CYGPATH_W) '$(srcdir)/openalsoundsystem.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-openalsoundsystem.Tpo" "$(DEPDIR)/funguloids-openalsoundsystem.Po"; else rm -f "$(DEPDIR)/funguloids-openalsoundsystem.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='openalsoundsystem.cpp' object='funguloids-openalsoundsystem.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-openalsoundsystem.obj `if test -f 'openalsoundsystem.cpp'; then $(CYGPATH_W) 'openalsoundsystem.cpp'; else $(CYGPATH_W) '$(srcdir)/openalsoundsystem.cpp'; fi`

funguloids-player.o: player.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-player.o -MD -MP -MF "$(DEPDIR)/funguloids-player.Tpo" -c -o funguloids-player.o `test -f 'player.cpp' || echo '$(srcdir)/'`player.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-player.Tpo" "$(DEPDIR)/funguloids-player.Po"; else rm -f "$(DEPDIR)/funguloids-player.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='player.cpp' object='funguloids-player.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-player.o `test -f 'player.cpp' || echo '$(srcdir)/'`player.cpp

funguloids-player.obj: player.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-player.obj -MD -MP -MF "$(DEPDIR)/funguloids-player.Tpo" -c -o funguloids-player.obj `if test -f 'player.cpp'; then $(CYGPATH_W) 'player.cpp'; else $(CYGPATH_W) '$(srcdir)/player.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-player.Tpo" "$(DEPDIR)/funguloids-player.Po"; else rm -f "$(DEPDIR)/funguloids-player.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='player.cpp' object='funguloids-player.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-player.obj `if test -f 'player.cpp'; then $(CYGPATH_W) 'player.cpp'; else $(CYGPATH_W) '$(srcdir)/player.cpp'; fi`

funguloids-playlist.o: playlist.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-playlist.o -MD -MP -MF "$(DEPDIR)/funguloids-playlist.Tpo" -c -o funguloids-playlist.o `test -f 'playlist.cpp' || echo '$(srcdir)/'`playlist.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-playlist.Tpo" "$(DEPDIR)/funguloids-playlist.Po"; else rm -f "$(DEPDIR)/funguloids-playlist.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='playlist.cpp' object='funguloids-playlist.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-playlist.o `test -f 'playlist.cpp' || echo '$(srcdir)/'`playlist.cpp

funguloids-playlist.obj: playlist.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-playlist.obj -MD -MP -MF "$(DEPDIR)/funguloids-playlist.Tpo" -c -o funguloids-playlist.obj `if test -f 'playlist.cpp'; then $(CYGPATH_W) 'playlist.cpp'; else $(CYGPATH_W) '$(srcdir)/playlist.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-playlist.Tpo" "$(DEPDIR)/funguloids-playlist.Po"; else rm -f "$(DEPDIR)/funguloids-playlist.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='playlist.cpp' object='funguloids-playlist.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-playlist.obj `if test -f 'playlist.cpp'; then $(CYGPATH_W) 'playlist.cpp'; else $(CYGPATH_W) '$(srcdir)/playlist.cpp'; fi`

funguloids-scriptsystem.o: scriptsystem.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-scriptsystem.o -MD -MP -MF "$(DEPDIR)/funguloids-scriptsystem.Tpo" -c -o funguloids-scriptsystem.o `test -f 'scriptsystem.cpp' || echo '$(srcdir)/'`scriptsystem.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-scriptsystem.Tpo" "$(DEPDIR)/funguloids-scriptsystem.Po"; else rm -f "$(DEPDIR)/funguloids-scriptsystem.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scriptsystem.cpp' object='funguloids-scriptsystem.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-scriptsystem.o `test -f 'scriptsystem.cpp' || echo '$(srcdir)/'`scriptsystem.cpp

funguloids-scriptsystem.obj: scriptsystem.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-scriptsystem.obj -MD -MP -MF "$(DEPDIR)/funguloids-scriptsystem.Tpo" -c -o funguloids-scriptsystem.obj `if test -f 'scriptsystem.cpp'; then $(CYGPATH_W) 'scriptsystem.cpp'; else $(CYGPATH_W) '$(srcdir)/scriptsystem.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-scriptsystem.Tpo" "$(DEPDIR)/funguloids-scriptsystem.Po"; else rm -f "$(DEPDIR)/funguloids-scriptsystem.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scriptsystem.cpp' object='funguloids-scriptsystem.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-scriptsystem.obj `if test -f 'scriptsystem.cpp'; then $(CYGPATH_W) 'scriptsystem.cpp'; else $(CYGPATH_W) '$(srcdir)/scriptsystem.cpp'; fi`

funguloids-streamplayer.o: streamplayer.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-streamplayer.o -MD -MP -MF "$(DEPDIR)/funguloids-streamplayer.Tpo" -c -o funguloids-streamplayer.o `test -f 'streamplayer.cpp' || echo '$(srcdir)/'`streamplayer.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-streamplayer.Tpo" "$(DEPDIR)/funguloids-streamplayer.Po"; else rm -f "$(DEPDIR)/funguloids-streamplayer.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='streamplayer.cpp' object='funguloids-streamplayer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-streamplayer.o `test -f 'streamplayer.cpp' || echo '$(srcdir)/'`streamplayer.cpp

funguloids-streamplayer.obj: streamplayer.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-streamplayer.obj -MD -MP -MF "$(DEPDIR)/funguloids-streamplayer.Tpo" -c -o funguloids-streamplayer.obj `if test -f 'streamplayer.cpp'; then $(CYGPATH_W) 'streamplayer.cpp'; else $(CYGPATH_W) '$(srcdir)/streamplayer.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-streamplayer.Tpo" "$(DEPDIR)/funguloids-streamplayer.Po"; else rm -f "$(DEPDIR)/funguloids-streamplayer.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='streamplayer.cpp' object='funguloids-streamplayer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-streamplayer.obj `if test -f 'streamplayer.cpp'; then $(CYGPATH_W) 'streamplayer.cpp'; else $(CYGPATH_W) '$(srcdir)/streamplayer.cpp'; fi`

funguloids-tentacles.o: tentacles.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-tentacles.o -MD -MP -MF "$(DEPDIR)/funguloids-tentacles.Tpo" -c -o funguloids-tentacles.o `test -f 'tentacles.cpp' || echo '$(srcdir)/'`tentacles.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-tentacles.Tpo" "$(DEPDIR)/funguloids-tentacles.Po"; else rm -f "$(DEPDIR)/funguloids-tentacles.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tentacles.cpp' object='funguloids-tentacles.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-tentacles.o `test -f 'tentacles.cpp' || echo '$(srcdir)/'`tentacles.cpp

funguloids-tentacles.obj: tentacles.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-tentacles.obj -MD -MP -MF "$(DEPDIR)/funguloids-tentacles.Tpo" -c -o funguloids-tentacles.obj `if test -f 'tentacles.cpp'; then $(CYGPATH_W) 'tentacles.cpp'; else $(CYGPATH_W) '$(srcdir)/tentacles.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-tentacles.Tpo" "$(DEPDIR)/funguloids-tentacles.Po"; else rm -f "$(DEPDIR)/funguloids-tentacles.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='tentacles.cpp' object='funguloids-tentacles.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-tentacles.obj `if test -f 'tentacles.cpp'; then $(CYGPATH_W) 'tentacles.cpp'; else $(CYGPATH_W) '$(srcdir)/tentacles.cpp'; fi`

funguloids-whirler.o: whirler.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-whirler.o -MD -MP -MF "$(DEPDIR)/funguloids-whirler.Tpo" -c -o funguloids-whirler.o `test -f 'whirler.cpp' || echo '$(srcdir)/'`whirler.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-whirler.Tpo" "$(DEPDIR)/funguloids-whirler.Po"; else rm -f "$(DEPDIR)/funguloids-whirler.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='whirler.cpp' object='funguloids-whirler.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-whirler.o `test -f 'whirler.cpp' || echo '$(srcdir)/'`whirler.cpp

funguloids-whirler.obj: whirler.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -MT funguloids-whirler.obj -MD -MP -MF "$(DEPDIR)/funguloids-whirler.Tpo" -c -o funguloids-whirler.obj `if test -f 'whirler.cpp'; then $(CYGPATH_W) 'whirler.cpp'; else $(CYGPATH_W) '$(srcdir)/whirler.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/funguloids-whirler.Tpo" "$(DEPDIR)/funguloids-whirler.Po"; else rm -f "$(DEPDIR)/funguloids-whirler.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='whirler.cpp' object='funguloids-whirler.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(funguloids_CPPFLAGS) $(CPPFLAGS) $(funguloids_CXXFLAGS) $(CXXFLAGS) -c -o funguloids-whirler.obj `if test -f 'whirler.cpp'; then $(CYGPATH_W) 'whirler.cpp'; else $(CYGPATH_W) '$(srcdir)/whirler.cpp'; fi`
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bininstalldir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-bininstallPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-bininstallPROGRAMS

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-bininstallPROGRAMS uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean \
	clean-bininstallPROGRAMS clean-generic ctags distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-bininstallPROGRAMS install-data install-data-am \
	install-exec install-exec-am install-info install-info-am \
	install-man install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic pdf pdf-am \
	ps ps-am tags uninstall uninstall-am \
	uninstall-bininstallPROGRAMS uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
